name: Build Firmware

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
    - main
    paths-ignore:
    - enclosure/**
    - frontend/**
    - gerbers/**
    - kicad/**
    - pics/**
    - pdfs/**
    - .gitattributes
    - .gitignore
    - '**/*.md'
    - '**/*.csv'
    - '!.github/workflows/build-firmware.yaml'
  pull_request:
    paths-ignore:
    - enclosure/**
    - frontend/**
    - gerbers/**
    - kicad/**
    - pics/**
    - pdfs/**
    - .gitattributes
    - .gitignore
    - '**/*.md'
    - '**/*.csv'
    - '!.github/workflows/build-firmware.yaml'

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "20.2"

    - name: Install Dependencies
      run: |
        cd frontend
        npm ci

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: frontend/dist
        if-no-files-found: error
        retention-days: 1

  build-firmware:
    runs-on: ubuntu-latest
    needs: build-frontend

    strategy:
      matrix:
        platform:
        - esp32
        - esp32dev

    steps:
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/.cache
          firmware/.pio/libdeps
        key: ${{ runner.os }}-pio-${{ matrix.platform }}-${{ hashFiles('firmware/platformio.ini') }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install PlatformIO Core
      run: pip install --upgrade platformio

    - uses: actions/checkout@v3

    - name: Copy built frontend
      uses: actions/download-artifact@v3
      with:
        name: frontend
        path: frontend/dist

    - name: Set Versions
      run: |
        echo "FRONTEND_VERSION=$(cat frontend/package.json | jq -r .version)" >> $GITHUB_OUTPUT
        echo "FIRMWARE_VERSION=$(cat firmware/.version)" >> $GITHUB_OUTPUT
      id: versions

    - name: Build ${{ matrix.platform }} Frontend
      run: |
        cd firmware
        pio run --target buildfs -e ${{ matrix.platform }}

    - uses: actions/upload-artifact@v3
      with:
        name: SnekSafe-${{ matrix.platform }}-${{ steps.versions.outputs.FRONTEND_VERSION }}-${{ github.run_number }}-frontend.bin
        path: firmware/.pio/build/${{ matrix.platform }}/littlefs.bin
        if-no-files-found: error
        retention-days: 1

    - name: Build ${{ matrix.platform }} Firmware
      run: |
        cd firmware
        pio run -e ${{ matrix.platform }}

    - uses: actions/upload-artifact@v3
      with:
        name: SnekSafe-${{ matrix.platform }}-${{ steps.versions.outputs.FRONTEND_VERSION }}-${{ github.run_number }}-firmware.bin
        path: firmware/.pio/build/${{ matrix.platform }}/firmware.bin
        if-no-files-found: error
        retention-days: 1
