; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
data_dir = ../frontend/dist

[env]
framework = arduino
check_skip_packages = yes
lib_deps =
    # renovate: datasource=github-releases
    esphome/ESPAsyncWebServer-esphome@3.0.0
    # renovate: datasource=github-releases
    bblanchon/ArduinoJson@6.21.2
    # renovate: datasource=github-releases
    arduino-libraries/NTPClient@3.2.1
    # renovate: datasource=git-refs
    https://github.com/dfrobot/DFRobot_SHT3x.git@1.0.0+sha.f5fc122
    # renovate: datasource=github-releases
    PowerBroker2/ArduPID@0.2.0
    # renovate: datasource=github-releases
    fbiego/ESP32Time@2.0.0
    # renovate: datasource=github-releases
    PowerBroker2/FireTimer@1.0.5
board_build.filesystem = littlefs
build_flags = !python scripts/git_version_macro.py

[env:esp32]
platform = espressif32
board = az-delivery-devkit-v4
lib_deps = ${env.lib_deps}
board_build.partitions = platforms/esp32/partitions.csv
build_flags = ${env.build_flags}

[env:esp32dev]
platform = espressif32
board = az-delivery-devkit-v4
lib_deps = ${env:esp32.lib_deps}
board_build.partitions = platforms/esp32/partitions.csv
build_flags = ${env.build_flags} -DCORE_DEBUG_LEVEL=5 -DDEV=true

[env:esp32dev-ota]
platform = ${env:esp32dev.platform}
board = ${env:esp32dev.board}
lib_deps = ${env:esp32dev.lib_deps}
board_build.partitions = ${env:esp32dev.board_build.partitions}
build_flags = ${env:esp32dev.build_flags}
upload_protocol = espota
upload_port = snek.local
