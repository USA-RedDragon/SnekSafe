; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
data_dir = ../frontend/dist

[env]
framework = arduino
check_skip_packages = yes
extra_scripts = pre:certs/gen_certs_task.py
board_build.embed_files = certs/x509_crt_bundle.bin
lib_deps =
    # renovate: v: datasource=github-releases depName=esphome/ESPAsyncWebServer
    esphome/ESPAsyncWebServer-esphome@3.1.0
    # renovate: v: datasource=github-releases
    bblanchon/ArduinoJson@6.21.3
    # renovate: datasource=github-releases
    arduino-libraries/NTPClient@3.2.1
    https://github.com/dfrobot/DFRobot_SHT3x.git@1.0.0+sha.f5fc122
    # renovate: datasource=github-releases
    PowerBroker2/ArduPID@0.2.1
    # renovate: datasource=github-releases
    fbiego/ESP32Time@2.0.4
    # renovate: datasource=github-releases
    PowerBroker2/FireTimer@1.0.5
board_build.filesystem = littlefs
build_flags = !python scripts/git_version_macro.py

[env:esp32]
# renovate: datasource=github-releases depName=platformio/platform-espressif32
platform = https://github.com/platformio/platform-espressif32#v6.4.0
board = az-delivery-devkit-v4
lib_deps = ${env.lib_deps}
extra_scripts = ${env.extra_scripts}
board_build.embed_files = ${env.board_build.embed_files}
build_flags = ${env.build_flags}

[env:esp32dev]
platform = ${env:esp32.platform}
board = az-delivery-devkit-v4
lib_deps = ${env:esp32.lib_deps}
extra_scripts = ${env:esp32.extra_scripts}
board_build.embed_files = ${env:esp32.board_build.embed_files}
build_flags = !python scripts/git_version_macro.py dev

[env:esp32dev-ota]
platform = ${env:esp32dev.platform}
board = ${env:esp32dev.board}
lib_deps = ${env:esp32dev.lib_deps}
extra_scripts = ${env:esp32dev.extra_scripts}
board_build.embed_files = ${env:esp32dev.board_build.embed_files}
build_flags = ${env:esp32dev.build_flags}
upload_protocol = espota
upload_port = snek.local
